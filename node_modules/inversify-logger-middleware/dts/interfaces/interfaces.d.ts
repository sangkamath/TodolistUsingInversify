import * as inversify from "inversify";
declare namespace interfaces {
    interface LoggerSettings {
        request?: RequestLoggerSettings;
        time?: boolean;
    }
    interface RequestLoggerSettings {
        serviceIdentifier?: boolean;
        bindings?: BindingLoggerSettings;
        target?: TargetLoggerSettings;
    }
    interface BindingLoggerSettings {
        activated?: boolean;
        serviceIdentifier?: boolean;
        implementationType?: boolean;
        factory?: boolean;
        provider?: boolean;
        constraint?: boolean;
        onActivation?: boolean;
        cache?: boolean;
        dynamicValue?: boolean;
        scope?: boolean;
        type?: boolean;
    }
    interface TargetLoggerSettings {
        serviceIdentifier?: boolean;
        name?: boolean;
        metadata?: boolean;
    }
    interface LogEntry {
        error: boolean;
        exception: any;
        guid: string;
        multiInject: boolean;
        results: any[];
        rootRequest: inversify.interfaces.Request;
        serviceIdentifier: any;
        time: string;
    }
}
export default interfaces;
