{"version":3,"file":"/Users/sangeethak/Downloads/inversify-express-example-master/MongoDB/utils/mongodb/client.ts","sources":["/Users/sangeethak/Downloads/inversify-express-example-master/MongoDB/utils/mongodb/client.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,mCAAuC;AACvC,uCAAuC;AACvC,2CAAiD;AAIjD;IAGE;QAAA,iBAIC;QAHC,8BAAiB,CAAC,aAAa,CAAC,UAAC,UAAU;YACzC,KAAI,CAAC,EAAE,GAAG,UAAU,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,4BAAI,GAAX,UAAY,UAAkB,EAAE,MAAc,EAAE,MAA6B;QAC3E,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,IAAI;YAC9D,OAAO,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,mCAAW,GAAlB,UAAmB,UAAkB,EAAE,QAAgB,EAAE,MAA6B;QACpF,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,kBAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,IAAI;YAChG,OAAO,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,8BAAM,GAAb,UAAc,UAAkB,EAAE,KAAW,EAAE,MAA6B;QAC1E,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,UAAC,KAAK,EAAE,MAAM;YAC5D,OAAO,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,8BAAM,GAAb,UAAc,UAAkB,EAAE,QAAgB,EAAE,KAAW,EAAE,MAA6B;QAC5F,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CACtC,EAAE,GAAG,EAAE,IAAI,kBAAQ,CAAC,QAAQ,CAAC,EAAE,EAC/B,EAAE,IAAI,EAAE,KAAK,EAAE,EACf,UAAC,KAAK,EAAE,MAAM,IAAK,OAAA,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,EAApB,CAAoB,CACxC,CAAC;IACJ,CAAC;IAEM,8BAAM,GAAb,UAAc,UAAkB,EAAE,QAAgB,EAAE,MAA6B;QAC/E,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,kBAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAC,KAAK,EAAE,MAAM;YACtF,OAAO,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAvCU,aAAa;QADzB,sBAAU,EAAE;;OACA,aAAa,CAwCzB;IAAD,oBAAC;CAAA,AAxCD,IAwCC;AAxCY,sCAAa","sourcesContent":["import { Db, ObjectID } from 'mongodb';\nimport { injectable } from 'inversify';\nimport { MongoDBConnection } from './connection';\nimport { User } from '../../models/user';\n\n@injectable()\nexport class MongoDBClient {\n  public db: Db;\n\n  constructor() {\n    MongoDBConnection.getConnection((connection) => {\n      this.db = connection;\n    });\n  }\n\n  public find(collection: string, filter: Object, result: (error, data) => void): void {\n    this.db.collection(collection).find(filter).toArray((error, find) => {\n      return result(error, find);\n    });\n  }\n\n  public findOneById(collection: string, objectId: string, result: (error, data) => void): void {\n    this.db.collection(collection).find({ _id: new ObjectID(objectId) }).limit(1).toArray((error, find) => {\n      return result(error, find[0]);\n    });\n  }\n\n  public insert(collection: string, model: User, result: (error, data) => void): void {\n    this.db.collection(collection).insertOne(model, (error, insert) => {\n      return result(error, insert.ops[0]);\n    });\n  }\n\n  public update(collection: string, objectId: string, model: User, result: (error, data) => void): void {\n    this.db.collection(collection).updateOne(\n      { _id: new ObjectID(objectId) },\n      { $set: model },\n      (error, update) => result(error, model)\n    );\n  }\n\n  public remove(collection: string, objectId: string, result: (error, data) => void): void {\n    this.db.collection(collection).deleteOne({ _id: new ObjectID(objectId) }, (error, remove) => {\n      return result(error, remove);\n    });\n  }\n}\n"]}